# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen 80 default ;
	listen [::]:80 ;

	root /var/www/html/;
#	index info.php index.htm;
        index index.html index.htm index.nginx-debian.html;
	# Make site accessible from http://localhost/
	server_name localhost;
        

	location / {
         content_by_lua '
                  -- local res = ngx.location.capture("http://10.1.15.1:8500/v1/health/service/ubuntu?passing")
 		 local res = ngx.location.capture("/ips")
		 -- local res=os.execute("curl http://10.1.15.1:8500/v1/catalog/nodes")
		 -- local handle = io.popen("curl http://10.1.15.1:8500/v1/health/service/ubuntu?passing")
		 -- local result = res:read("*a")
                 --ngx.print(result)
                 local res2 = json.decode(res)
        	 ngx.print(res2)	
        	 ngx.say("Hello")	
    		';
	#	proxy_bind $host:8080; # Bind to port 80 << THIS IS THE MAGIC
               # proxy_pass http://127.0.0.1:8080/tweet123/;
       		 

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		#proxy_pass http://127.0.0.1:8080/tweet123/; 
		#proxy_redirect default;
		#proxy_set_header        Host            $host;
    		#proxy_set_header        X-Real-IP       $remote_addr;
    		#proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    		#proxy_set_header        X-NginX-Proxy   true;
                # Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}
        location = /ips {

	    proxy_max_temp_file_size 0;
	    proxy_busy_buffers_size 4k;
	    proxy_buffers 2 4k;	
	    proxy_pass http://10.1.15.1:8500/v1/health/service/ubuntu?passing;
 	}

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;    
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/html;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
